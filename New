import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class UserService {
  private baseUrl = '/api/User';

  constructor(private http: HttpClient) {}

  authenticateUser(email: string, password: string): Observable<boolean> {
    return this.http.post<boolean>(`${this.baseUrl}/AuthenticateUser`, { email, password });
  }

  getUserIdByEmail(email: string): Observable<number> {
    return this.http.get<number>(`${this.baseUrl}/GetUserIdByEmail/${email}`);
  }

  getSavedProducts(userId: number): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/GetSavedProducts/${userId}`);
  }

  getOrderHistory(userId: number): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/GetOrderHistory/${userId}`);
  }
}
login.ts
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { UserService } from '../services/user.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html'
})
export class LoginComponent {
  email = '';
  password = '';
  errorMessage = '';

  constructor(private userService: UserService, private router: Router) {}

  loginUser(): void {
    this.userService.authenticateUser(this.email, this.password).subscribe({
      next: (isAuthenticated) => {
        if (isAuthenticated) {
          this.userService.getUserIdByEmail(this.email).subscribe({
            next: (userId) => {
              localStorage.setItem('userId', userId.toString());
              this.router.navigate(['/dashboard']);
            },
            error: () => {
              this.errorMessage = 'Failed to retrieve user ID.';
            }
          });
        } else {
          this.errorMessage = 'Invalid email or password.';
        }
      },
      error: () => {
        this.errorMessage = 'Login failed. Please try again.';
      }
    });
  }
}


