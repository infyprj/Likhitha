
  generateInvoiceHtml(order: IOrder, items: IOrderItem[]): string {
    const fullAddress = this.getFullAddress(order);
    const subtotal = items.reduce((sum, item) => sum + (item.unitPrice * item.quantity), 0);
    const gst = subtotal * 0.18;
    const shipping = subtotal > 50000 ? 0 : 500;
    const total = subtotal + gst + shipping;

    const itemRows = items.map(item => `
    <tr>
      <td>${item.productName}</td>
      <td>${item.quantity}</td>
      <td>₹${item.unitPrice.toFixed(2)}</td>
      <td>₹${(item.quantity * item.unitPrice).toFixed(2)}</td>
    </tr>
  `).join('');

    return `
    <html>
      <head>
        <title>Invoice - Order #${order.orderId}</title>
        <style>
          body { font-family: Arial, sans-serif; padding: 20px; }
          h1 { text-align: center; }
          table { width: 100%; border-collapse: collapse; margin-top: 20px; }
          th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }
          .summary td { font-weight: bold; }
        </style>
      </head>
      <body>
        <h1>Invoice</h1>
        <p><strong>Order ID:</strong> ${order.orderId}</p>
        <p><strong>Date:</strong> ${this.formatDate(order.orderDate)}</p>
         <p><strong>Name:</strong><br>${order.name}</p>
        <p><strong>Shipping To:</strong><br>${fullAddress}</p>

        <table>
          <thead>
            <tr>
              <th>Product</th>
              <th>Qty</th>
              <th>Price</th>
              <th>Total</th>
            </tr>
          </thead>
          <tbody>
            ${itemRows}
            <tr class="summary">
              <td colspan="3">Subtotal</td>
              <td>₹${subtotal.toFixed(2)}</td>
            </tr>
            <tr class="summary">
              <td colspan="3">Shipping Charges</td>
              <td>₹${shipping.toFixed(2)}</td>
            </tr>
            <tr class="summary">
              <td colspan="3">GST (18%)</td>
              <td>₹${gst.toFixed(2)}</td>
            </tr>
            <tr class="summary">
              <td colspan="3">Total</td>
              <td>₹${total.toFixed(2)}</td>
            </tr>
          </tbody>
        </table>
      </body>
    </html>
  `;
  }
  printOrderInvoice(order: IOrder): void {
    const items = this.getOrderItems(order.orderId);
    if (items.length === 0) {
      alert('No items in order to generate invoice.');
      return;
    }


html
 <div class="invoice-container" (click)="printOrderInvoice(order)" *ngIf="order.orderStatus!=='Cancelled'">
   <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-receipt-cutoff" viewBox="0 0 16 16">
     <path d="M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5M11.5 4a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z" />
     <path d="M2.354.646a.5.5 0 0 0-.801.13l-.5 1A.5.5 0 0 0 1 2v13H.5a.5.5 0 0 0 0 1h15a.5.5 0 0 0 0-1H15V2a.5.5 0 0 0-.053-.224l-.5-1a.5.5 0 0 0-.8-.13L13 1.293l-.646-.647a.5.5 0 0 0-.708 0L11 1.293l-.646-.647a.5.5 0 0 0-.708 0L9 1.293 8.354.646a.5.5 0 0 0-.708 0L7 1.293 6.354.646a.5.5 0 0 0-.708 0L5 1.293 4.354.646a.5.5 0 0 0-.708 0L3 1.293zm-.217 1.198.51.51a.5.5 0 0 0 .707 0L4 1.707l.646.647a.5.5 0 0 0 .708 0L6 1.707l.646.647a.5.5 0 0 0 .708 0L8 1.707l.646.647a.5.5 0 0 0 .708 0L10 1.707l.646.647a.5.5 0 0 0 .708 0L12 1.707l.646.647a.5.5 0 0 0 .708 0l.509-.51.137.274V15H2V2.118z" />
   </svg>
   Download Invoice
 </div>
