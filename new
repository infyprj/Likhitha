//import { Component } from '@angular/core';

//@Component({
//  selector: 'app-register',
//  templateUrl: './register.component.html',
//  styleUrls: ['./register.component.css']
//})
//export class RegisterComponent {

//}

import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { UserService } from '../services/user-service/user.service';
import { Iuser } from '../interfaces/user';
import { Router } from '@angular/router';
//import { UserService } from '../services/user.service';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent implements OnInit {
  successMsg = '';
  errorMsg = '';
  showResponse = false;

  constructor(private userService: UserService, private router: Router) { }

  ngOnInit(): void { }

  submitRegisterForm(form: NgForm) {
    const userObj : Iuser = {
      email: form.value.email,
      passwordHash: form.value.password,
      firstName: form.value.firstName,
      lastName: form.value.lastName,
      phoneNumber: form.value.phone,
      address: form.value.address,
      city: form.value.city,
      state: form.value.state,
      postalCode: form.value.postalCode,
      country: form.value.country,
      roleId: 2
    };

    this.userService.registerUser(userObj).subscribe({
      next: (response) => {
        this.showResponse = true;
        this.successMsg = response ? 'Registration successful!' : 'Registration failed.';
        this.router.navigate(['/login']);
      },
      error: (err) => {
        this.showResponse = true;
        this.errorMsg = 'Error: ' + err;
      }
    });
  }
}

_____________________________

<app-navbar></app-navbar>



<div class="container">
  <form #registerForm="ngForm" (ngSubmit)="submitRegisterForm(registerForm)" style="background-color:beige;">
    <h2 style="text-align:center;">Register</h2>
    <h6 style="text-align:right; color:gray;">All fields are mandatory</h6>

    <!-- First Name -->
    <div class="form-group">
      <label>First Name</label>
      <input type="text" name="firstName" class="form-control" ngModel required #firstNameRef="ngModel">
      <div *ngIf="firstNameRef.invalid && (firstNameRef.dirty || firstNameRef.touched)" style="color:red;">
        <small *ngIf="firstNameRef.errors?.['required']">First name is required.</small>
      </div>
    </div>

    <!-- Last Name -->
    <div class="form-group">
      <label>Last Name</label>
      <input type="text" name="lastName" class="form-control" ngModel required #lastNameRef="ngModel">
      <div *ngIf="lastNameRef.invalid && (lastNameRef.dirty || lastNameRef.touched)" style="color:red;">
        <small *ngIf="lastNameRef.errors?.['required']">Last name is required.</small>
      </div>
    </div>

    <!-- Email -->
    <div class="form-group">
      <label>Email</label>
      <input type="email" name="email" class="form-control" ngModel required
             pattern="^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$" #emailRef="ngModel">
      <div *ngIf="emailRef.invalid && (emailRef.dirty || emailRef.touched)" style="color:red;">
        <small *ngIf="emailRef.errors?.['required']">Email is required.</small>
        <small *ngIf="emailRef.errors?.['pattern']">Enter a valid email address.</small>
      </div>
    </div>

   

<!-- Password -->
<div class="form-group">
  <label>Password</label>
  <input type="password" name="password" class="form-control" ngModel required minlength="6" #passwordRef="ngModel">
  <div *ngIf="passwordRef.invalid && (passwordRef.dirty || passwordRef.touched)" style="color:red;">
    <small *ngIf="passwordRef.errors?.['required']">Password is required.</small>
    <small *ngIf="passwordRef.errors?.['minlength']">Password must be at least 6 characters.</small>
  </div>
</div>

<!-- Phone Number -->
<div class="form-group">
  <label>Phone Number</label>
  <input type="text" name="phone" class="form-control" ngModel required pattern="^[0-9]{10}$" #phoneRef="ngModel">
  <div *ngIf="phoneRef.invalid && (phoneRef.dirty || phoneRef.touched)" style="color:red;">
    <small *ngIf="phoneRef.errors?.['required']">Phone number is required.</small>
    <small *ngIf="phoneRef.errors?.['pattern']">Enter a valid 10-digit phone number.</small>
  </div>
</div>

<!-- Address -->
<div class="form-group">
  <label>Address</label>
  <input type="text" name="address" class="form-control" ngModel required #addressRef="ngModel">
  <div *ngIf="addressRef.invalid && (addressRef.dirty || addressRef.touched)" style="color:red;">
    <small *ngIf="addressRef.errors?.['required']">Address is required.</small>
  </div>
</div>

<!-- City -->
<div class="form-group">
  <label>City</label>
  <input type="text" name="city" class="form-control" ngModel required #cityRef="ngModel">
  <div *ngIf="cityRef.invalid && (cityRef.dirty || cityRef.touched)" style="color:red;">
    <small *ngIf="cityRef.errors?.['required']">City is required.</small>
  </div>
</div>

<!-- State -->
<div class="form-group">
  <label>State</label>
  <input type="text" name="state" class="form-control" ngModel required #stateRef="ngModel">
  <div *ngIf="stateRef.invalid && (stateRef.dirty || stateRef.touched)" style="color:red;">
    <small *ngIf="stateRef.errors?.['required']">State is required.</small>
  </div>
</div>

<!-- Postal Code -->
<div class="form-group">
  <label>Postal Code</label>
  <input type="text" name="postalCode" class="form-control" ngModel required pattern="^[0-9]{6}$" #postalRef="ngModel">
  <div *ngIf="postalRef.invalid && (postalRef.dirty || postalRef.touched)" style="color:red;">
    <small *ngIf="postalRef.errors?.['required']">Postal code is required.</small>
    <small *ngIf="postalRef.errors?.['pattern']">Enter a valid 6-digit postal code.</small>
  </div>
</div>

<!-- Country -->
<div class="form-group">
  <label>Country</label>
  <input type="text" name="country" class="form-control" ngModel required #countryRef="ngModel">
  <div *ngIf="countryRef.invalid && (countryRef.dirty || countryRef.touched)" style="color:red;">
    <small *ngIf="countryRef.errors?.['required']">Country is required.</small>
  </div>
</div>

<!-- Submit Button -->
<div class="form-group" style="text-align:left;">
  <button type="submit" [disabled]="!registerForm.valid" class="btn btn-primary">Register</button>
</div>

<!-- Response Messages -->
<div *ngIf="showResponse">
  <p style="color: green;" *ngIf="successMsg">{{ successMsg }}</p>
  <p style="color: red;" *ngIf="errorMsg">{{ errorMsg }}</p>
</div>
  </form>
</div>

_________________
login
//import { Component } from '@angular/core';

//@Component({
//  selector: 'app-login',
//  templateUrl: './login.component.html',
//  styleUrls: ['./login.component.css']
//})
//export class LoginComponent {

//}

import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
//import { UserService } from '../services/user.service';
import { Router } from '@angular/router';
import { UserService } from '../services/user-service/user.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  status: string = "";
  errorMsg: string = "";
  msg: string = "";
  showDiv: boolean = false;

  constructor(private _userService: UserService, private router: Router) { }

  submitLoginForm(form: NgForm) {
    if (!form.valid) {
      this.errorMsg = "Form validation failed.";
      return;
    }

    this._userService.validateCredentials(form.value.email, form.value.password).subscribe(
      (response: any) => {
        if (response.success )
        {
          this.status = "success";
          this.router.navigate(['/products']);
          sessionStorage.setItem("userId", response.user.userId);
          sessionStorage.setItem("userRoleId", response.user.roleId);
          this.msg = "Login successful";
          
          
        } else {
          this.status = "Invalid credentials";
          this.showDiv = true;
          this.msg = "Invalid credentials. Try again.";
        }
      },
      (error) => {
        this.errorMsg = "Server error. Try again later.";
      },
      () => console.log("Login request completed.")
    );
  }

  ngOnInit(): void {
    this._userService.logout();
  }
}
______________
<app-navbar></app-navbar>
<div class="container mt-4">
  <form #loginForm="ngForm" (ngSubmit)="submitLoginForm(loginForm)" class="card p-4 shadow">
    <h2 class="text-center mb-3">Login</h2>

    <div class="form-group mb-3">
      <label>Email</label>
      <input type="email" name="email" #emailRef="ngModel" ngModel required
             class="form-control" placeholder="Enter email">
      <div *ngIf="emailRef.errors && (emailRef.touched || emailRef.dirty)" class="text-danger">
        <div *ngIf="emailRef.errors['required']">Email is required</div>
        <div *ngIf="emailRef.errors['email']">Invalid email format</div>
      </div>
    </div>

    <div class="form-group mb-3">
      <label>Password</label>
      <input type="password" name="password" #passwordRef="ngModel" ngModel required
             class="form-control" placeholder="Enter password">
      <div *ngIf="passwordRef.errors && (passwordRef.touched || passwordRef.dirty)" class="text-danger">
        <div *ngIf="passwordRef.errors['required']">Password is required</div>
      </div>
    </div>

    <button type="submit" class="btn btn-primary w-100">Login</button>

    <div *ngIf="showDiv" class="alert alert-warning mt-3">{{ msg }}</div>
    <div *ngIf="errorMsg" class="alert alert-danger mt-3">{{ errorMsg }}</div>
  </form>
</div>
