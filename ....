//import { Component } from '@angular/core';

//@Component({
//  selector: 'app-login',
//  templateUrl: './login.component.html',
//  styleUrls: ['./login.component.css']
//})
//export class LoginComponent {

//}

import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
//import { UserService } from '../services/user.service';
import { Router } from '@angular/router';
import { UserService } from '../services/user-service/user.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  status: string = "";
  errorMsg: string = "";
  msg: string = "";
  showDiv: boolean = false;
  toastMessage = '';
  showToast = false;
  toastColor = '';
  
  toastType: 'success' | 'error' = 'success';


  constructor(private _userService: UserService, private router: Router) { }
   

  submitLoginForm(form: NgForm) {
    if (!form.valid) {
      this.errorMsg = "Form validation failed.";
      return;
    }

    this._userService.validateCredentials(form.value.email, form.value.password).subscribe(
      (response: any) => {
        if (response.success )
        {
          
          this.status = "success";
          this.showDiv = true;
          this.showPopUp('Login successful');
          //this.toastColor = 'bg-success';
         
          //this.router.navigate(['/products']);

          sessionStorage.setItem("userId", response.user.userId);
          sessionStorage.setItem("userRoleId", response.user.roleId);
         

          //this.msg= "Login successful";
         // this.showPopUp('Login successful');


        } else {
          this.status = "Invalid credentials";
          this.showDiv = true;
          //this.msg = "Invalid credentials. Try again.";
          this.showPopUp('Invalid credentials');
          //this.toastColor = 'bg-danger';


        }
      },
      (error) => {
        this.errorMsg = "Server error. Try again later.";
      },
      () => console.log("Login request completed.")
    );
  }

  showPopUp(message: string, type: 'success' | 'error' = 'success'): void {
    this.toastMessage = message;
    this.toastType = type;
    this.showToast = true;
    setTimeout(() => this.showToast = false, 3000);
  }



  ngOnInit(): void {
    this._userService.logout();
  }
}




=============
<app-navbar></app-navbar>
<div class="container mt-4">
  <form #loginForm="ngForm" (ngSubmit)="submitLoginForm(loginForm)" class="card p-4 shadow">
    <h2 class="text-center mb-3">Login</h2>

    <div class="form-group mb-3">
      <label>Email</label>
      <input type="email" name="email" #emailRef="ngModel" ngModel required
             class="form-control" placeholder="Enter email">
      <div *ngIf="emailRef.errors && (emailRef.touched || emailRef.dirty)" class="text-danger">
        <div *ngIf="emailRef.errors['required']">Email is required</div>
        <div *ngIf="emailRef.errors['email']">Invalid email format</div>
      </div>
    </div>

    <div class="form-group mb-3">
      <label>Password</label>
      <input type="password" name="password" #passwordRef="ngModel" ngModel required
             class="form-control" placeholder="Enter password">
      <div *ngIf="passwordRef.errors && (passwordRef.touched || passwordRef.dirty)" class="text-danger">
        <div *ngIf="passwordRef.errors['required']">Password is required</div>
      </div>
    </div>
    <div class="position-fixed top-0 start-50 translate-middle-x p-3" style="z-index: 1005;" *ngIf="showToast">
      <div class="toast show text-white" [ngClass]="toastType==='success' ? 'bg-success' : 'bg-danger'">
        <div class="toast-body">
          {{toastMessage}}
        </div>
      </div>
    </div>
    
    <button type="submit" class="btn btn-primary w-100">Login</button>
    

    <div class="text-center mt-3 ">Dont't have an account?
    <a routerLink="/signup" class="text-primary text-decoration-underline" style="cursor:pointer;">
    Sign Up
    </a></div>
   
    


    <div *ngIf="showDiv" class="alert alert-warning mt-3">{{ msg }}</div>
    <div *ngIf="errorMsg" class="alert alert-danger mt-3">{{ errorMsg }}</div>
  </form>
</div>

